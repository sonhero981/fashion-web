{"ast":null,"code":"import { Action } from \"../internal/Action.js\";\nimport { QualifierValue } from \"../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../internal/qualifier/Qualifier.js\";\nimport { prepareColor } from \"../internal/utils/prepareColor.js\";\n/**\n * @description Adds a solid border around an image or video.\n *\n *  <b>Learn more:</b>\n * {@link https://cloudinary.com/documentation/image_transformations#adding_image_borders|Adding image borders}\n * @memberOf Actions\n * @namespace Border\n * @example\n * import {Cloudinary} from \"@cloudinary/url-gen\";\n * import {solid} from \"@cloudinary/url-gen/actions/border\";\n *\n * const yourCldInstance = new Cloudinary({cloud:{cloudName:'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.border(\n *  solid(15, 'green'),\n *  // Or alternatively\n *  solid().width(15).color('green')\n * );\n *\n */\n\n/**\n * @memberOf Actions.Border\n * @see Actions.Border\n * @example\n * // Used through a builder function Border.solid(), and not by creating a new instance\n * import {Cloudinary} from \"@cloudinary/url-gen\";\n *\n * const yourCldInstance = new Cloudinary({cloud:{cloudName:'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.border(\n *  Border.solid(15, 'green'),\n *  // Or alternatively\n *  Border.solid().width(15).color('green')\n * );\n */\n\nclass BorderAction extends Action {\n  /**\n   * @description Adds a border of the specified type around an image or video.\n   * @param {'solid'} borderType The type of border (currently only 'solid' is supported). Use values in {@link Qualifiers.Border|Border Values}.\n   * @param {string} color The color of the border.\n   * @param {number} borderWidth The width in pixels.\n   */\n  constructor(borderType, color, borderWidth) {\n    super();\n    this.borderType = borderType;\n    this.borderColor = prepareColor(color);\n    this.borderWidth = borderWidth;\n  }\n  /**\n   * @description Sets the width of the border\n   * @param {number | string} borderWidth The width in pixels.\n   */\n\n\n  width(borderWidth) {\n    this.borderWidth = borderWidth;\n    return this;\n  }\n  /**\n   * @description Sets the color of the border.\n   * @param {string} borderColor The color of the border.\n   */\n\n\n  color(borderColor) {\n    this.borderColor = prepareColor(borderColor);\n    return this;\n  }\n  /**\n   * @description Rounds the specified corners of an image.\n   * @param {RoundCornersAction} roundCorners\n   * @return {this}\n   */\n\n\n  roundCorners(roundCorners) {\n    this._roundCorners = roundCorners;\n    return this;\n  }\n\n  prepareQualifiers() {\n    const qualifierValue = new QualifierValue([`${this.borderWidth}px`, this.borderType, `${this.borderColor}`]).setDelimiter('_');\n    this.addQualifier(new Qualifier('bo', qualifierValue));\n\n    if (this._roundCorners) {\n      this.addQualifier(this._roundCorners.qualifiers.get('r'));\n    }\n  }\n\n}\n/**\n * @summary action\n * @memberOf Actions.Border\n * @description Sets the style of the border.\n * @param {number | string} width The width in pixels.\n * @param {string} color The color of the border, e.g 'green', 'yellow'.\n * @return {Actions.Border.BorderAction}\n */\n\n\nfunction solid(width, color) {\n  return new BorderAction('solid', color, width);\n}\n\nconst Border = {\n  solid\n};\nexport { BorderAction, Border, solid };","map":{"version":3,"sources":["C:/Users/sonhe/OneDrive/Desktop/New folder/nhom6-csdlnc/client/node_modules/@cloudinary/url-gen/actions/border.js"],"names":["Action","QualifierValue","Qualifier","prepareColor","BorderAction","constructor","borderType","color","borderWidth","borderColor","width","roundCorners","_roundCorners","prepareQualifiers","qualifierValue","setDelimiter","addQualifier","qualifiers","get","solid","Border"],"mappings":"AAAA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,cAAT,QAA+B,yCAA/B;AACA,SAASC,SAAT,QAA0B,oCAA1B;AACA,SAASC,YAAT,QAA6B,mCAA7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,YAAN,SAA2BJ,MAA3B,CAAkC;AAC9B;AACJ;AACA;AACA;AACA;AACA;AACIK,EAAAA,WAAW,CAACC,UAAD,EAAaC,KAAb,EAAoBC,WAApB,EAAiC;AACxC;AACA,SAAKF,UAAL,GAAkBA,UAAlB;AACA,SAAKG,WAAL,GAAmBN,YAAY,CAACI,KAAD,CAA/B;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACH;AACD;AACJ;AACA;AACA;;;AACIE,EAAAA,KAAK,CAACF,WAAD,EAAc;AACf,SAAKA,WAAL,GAAmBA,WAAnB;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;AACID,EAAAA,KAAK,CAACE,WAAD,EAAc;AACf,SAAKA,WAAL,GAAmBN,YAAY,CAACM,WAAD,CAA/B;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIE,EAAAA,YAAY,CAACA,YAAD,EAAe;AACvB,SAAKC,aAAL,GAAqBD,YAArB;AACA,WAAO,IAAP;AACH;;AACDE,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,cAAc,GAAG,IAAIb,cAAJ,CAAmB,CAAE,GAAE,KAAKO,WAAY,IAArB,EAA0B,KAAKF,UAA/B,EAA4C,GAAE,KAAKG,WAAY,EAA/D,CAAnB,EAAsFM,YAAtF,CAAmG,GAAnG,CAAvB;AACA,SAAKC,YAAL,CAAkB,IAAId,SAAJ,CAAc,IAAd,EAAoBY,cAApB,CAAlB;;AACA,QAAI,KAAKF,aAAT,EAAwB;AACpB,WAAKI,YAAL,CAAkB,KAAKJ,aAAL,CAAmBK,UAAnB,CAA8BC,GAA9B,CAAkC,GAAlC,CAAlB;AACH;AACJ;;AA5C6B;AA8ClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,KAAT,CAAeT,KAAf,EAAsBH,KAAtB,EAA6B;AACzB,SAAO,IAAIH,YAAJ,CAAiB,OAAjB,EAA0BG,KAA1B,EAAiCG,KAAjC,CAAP;AACH;;AACD,MAAMU,MAAM,GAAG;AACXD,EAAAA;AADW,CAAf;AAGA,SAASf,YAAT,EAAuBgB,MAAvB,EAA+BD,KAA/B","sourcesContent":["import { Action } from \"../internal/Action.js\";\nimport { QualifierValue } from \"../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../internal/qualifier/Qualifier.js\";\nimport { prepareColor } from \"../internal/utils/prepareColor.js\";\n/**\n * @description Adds a solid border around an image or video.\n *\n *  <b>Learn more:</b>\n * {@link https://cloudinary.com/documentation/image_transformations#adding_image_borders|Adding image borders}\n * @memberOf Actions\n * @namespace Border\n * @example\n * import {Cloudinary} from \"@cloudinary/url-gen\";\n * import {solid} from \"@cloudinary/url-gen/actions/border\";\n *\n * const yourCldInstance = new Cloudinary({cloud:{cloudName:'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.border(\n *  solid(15, 'green'),\n *  // Or alternatively\n *  solid().width(15).color('green')\n * );\n *\n */\n/**\n * @memberOf Actions.Border\n * @see Actions.Border\n * @example\n * // Used through a builder function Border.solid(), and not by creating a new instance\n * import {Cloudinary} from \"@cloudinary/url-gen\";\n *\n * const yourCldInstance = new Cloudinary({cloud:{cloudName:'demo'}});\n * const image = yourCldInstance.image('woman');\n * image.border(\n *  Border.solid(15, 'green'),\n *  // Or alternatively\n *  Border.solid().width(15).color('green')\n * );\n */\nclass BorderAction extends Action {\n    /**\n     * @description Adds a border of the specified type around an image or video.\n     * @param {'solid'} borderType The type of border (currently only 'solid' is supported). Use values in {@link Qualifiers.Border|Border Values}.\n     * @param {string} color The color of the border.\n     * @param {number} borderWidth The width in pixels.\n     */\n    constructor(borderType, color, borderWidth) {\n        super();\n        this.borderType = borderType;\n        this.borderColor = prepareColor(color);\n        this.borderWidth = borderWidth;\n    }\n    /**\n     * @description Sets the width of the border\n     * @param {number | string} borderWidth The width in pixels.\n     */\n    width(borderWidth) {\n        this.borderWidth = borderWidth;\n        return this;\n    }\n    /**\n     * @description Sets the color of the border.\n     * @param {string} borderColor The color of the border.\n     */\n    color(borderColor) {\n        this.borderColor = prepareColor(borderColor);\n        return this;\n    }\n    /**\n     * @description Rounds the specified corners of an image.\n     * @param {RoundCornersAction} roundCorners\n     * @return {this}\n     */\n    roundCorners(roundCorners) {\n        this._roundCorners = roundCorners;\n        return this;\n    }\n    prepareQualifiers() {\n        const qualifierValue = new QualifierValue([`${this.borderWidth}px`, this.borderType, `${this.borderColor}`]).setDelimiter('_');\n        this.addQualifier(new Qualifier('bo', qualifierValue));\n        if (this._roundCorners) {\n            this.addQualifier(this._roundCorners.qualifiers.get('r'));\n        }\n    }\n}\n/**\n * @summary action\n * @memberOf Actions.Border\n * @description Sets the style of the border.\n * @param {number | string} width The width in pixels.\n * @param {string} color The color of the border, e.g 'green', 'yellow'.\n * @return {Actions.Border.BorderAction}\n */\nfunction solid(width, color) {\n    return new BorderAction('solid', color, width);\n}\nconst Border = {\n    solid\n};\nexport { BorderAction, Border, solid };\n"]},"metadata":{},"sourceType":"module"}