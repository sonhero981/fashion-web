{"ast":null,"code":"import { ALLOWED_CLOUD_CONFIG } from \"../internal/internalConstants.js\";\nimport Config from \"./BaseConfig.js\";\n\nclass CloudConfig extends Config {\n  /**\n   * @param {ICloudConfig} userCloudConfig {@link ICloudConfig}\n   *\n   */\n  constructor(userCloudConfig) {\n    super();\n    const cloudConfig = this.filterOutNonSupportedKeys(userCloudConfig, ALLOWED_CLOUD_CONFIG);\n    Object.assign(this, cloudConfig);\n\n    if (!this.cloudName) {\n      throw 'Missing mandatory field cloudName';\n    }\n  }\n\n  extend(userCloudConfig) {\n    const cloudConfig = this.filterOutNonSupportedKeys(userCloudConfig, ALLOWED_CLOUD_CONFIG);\n    return new CloudConfig(Object.assign({}, this, cloudConfig));\n  }\n  /**\n   * @param {string} value Sets the CloudName\n   */\n\n\n  setCloudName(value) {\n    this.cloudName = value;\n    return this;\n  }\n  /**\n   * @param {string} value Sets the API Key\n   */\n\n\n  setApiKey(value) {\n    this.apiKey = value;\n    return this;\n  }\n  /**\n   * @param {string} value Sets the API Secret\n   */\n\n\n  setApiSecret(value) {\n    this.apiSecret = value;\n    return this;\n  }\n\n}\n\nexport default CloudConfig;","map":{"version":3,"sources":["C:/Users/sonhe/OneDrive/Desktop/New folder/nhom6-csdlnc/client/node_modules/@cloudinary/url-gen/config/CloudConfig.js"],"names":["ALLOWED_CLOUD_CONFIG","Config","CloudConfig","constructor","userCloudConfig","cloudConfig","filterOutNonSupportedKeys","Object","assign","cloudName","extend","setCloudName","value","setApiKey","apiKey","setApiSecret","apiSecret"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,kCAArC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AACA,MAAMC,WAAN,SAA0BD,MAA1B,CAAiC;AAC7B;AACJ;AACA;AACA;AACIE,EAAAA,WAAW,CAACC,eAAD,EAAkB;AACzB;AACA,UAAMC,WAAW,GAAG,KAAKC,yBAAL,CAA+BF,eAA/B,EAAgDJ,oBAAhD,CAApB;AACAO,IAAAA,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBH,WAApB;;AACA,QAAI,CAAC,KAAKI,SAAV,EAAqB;AACjB,YAAM,mCAAN;AACH;AACJ;;AACDC,EAAAA,MAAM,CAACN,eAAD,EAAkB;AACpB,UAAMC,WAAW,GAAG,KAAKC,yBAAL,CAA+BF,eAA/B,EAAgDJ,oBAAhD,CAApB;AACA,WAAO,IAAIE,WAAJ,CAAgBK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,IAAlB,EAAwBH,WAAxB,CAAhB,CAAP;AACH;AACD;AACJ;AACA;;;AACIM,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAChB,SAAKH,SAAL,GAAiBG,KAAjB;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;;;AACIC,EAAAA,SAAS,CAACD,KAAD,EAAQ;AACb,SAAKE,MAAL,GAAcF,KAAd;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;;;AACIG,EAAAA,YAAY,CAACH,KAAD,EAAQ;AAChB,SAAKI,SAAL,GAAiBJ,KAAjB;AACA,WAAO,IAAP;AACH;;AArC4B;;AAuCjC,eAAeV,WAAf","sourcesContent":["import { ALLOWED_CLOUD_CONFIG } from \"../internal/internalConstants.js\";\nimport Config from \"./BaseConfig.js\";\nclass CloudConfig extends Config {\n    /**\n     * @param {ICloudConfig} userCloudConfig {@link ICloudConfig}\n     *\n     */\n    constructor(userCloudConfig) {\n        super();\n        const cloudConfig = this.filterOutNonSupportedKeys(userCloudConfig, ALLOWED_CLOUD_CONFIG);\n        Object.assign(this, cloudConfig);\n        if (!this.cloudName) {\n            throw 'Missing mandatory field cloudName';\n        }\n    }\n    extend(userCloudConfig) {\n        const cloudConfig = this.filterOutNonSupportedKeys(userCloudConfig, ALLOWED_CLOUD_CONFIG);\n        return new CloudConfig(Object.assign({}, this, cloudConfig));\n    }\n    /**\n     * @param {string} value Sets the CloudName\n     */\n    setCloudName(value) {\n        this.cloudName = value;\n        return this;\n    }\n    /**\n     * @param {string} value Sets the API Key\n     */\n    setApiKey(value) {\n        this.apiKey = value;\n        return this;\n    }\n    /**\n     * @param {string} value Sets the API Secret\n     */\n    setApiSecret(value) {\n        this.apiSecret = value;\n        return this;\n    }\n}\nexport default CloudConfig;\n"]},"metadata":{},"sourceType":"module"}