{"ast":null,"code":"import { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description A VideoCodec class, this class has no methods, and just sets the codec type (vp9, vp8, etc.)\n * @memberOf Qualifiers.VideoCodec\n */\n\nclass VideoCodecType extends Qualifier {\n  constructor(type) {\n    super('vc');\n    this._type = type;\n    this.addValue(type);\n  }\n\n  getType() {\n    return this._type;\n  }\n\n}\n/**\n * @description An Advanced VideoCodec class with Profile and Level methods\n * @memberOf Qualifiers.VideoCodec\n */\n\n\nclass AdvVideoCodecType extends Qualifier {\n  constructor(type) {\n    super('vc');\n    this._type = type;\n  }\n\n  getType() {\n    return this._type;\n  }\n  /**\n   * @description Specifies the profile to use with the h264 codec.\n   * @param {Qualifiers.VideoCodecProfile | string} profile Sets the profile of the video codec\n   * @example new AdvVideoCodecType('h264').profile(VideoCodecProfile.baseline())\n   * @return this;\n   */\n\n\n  profile(profile) {\n    this._prof = profile;\n    return this;\n  }\n\n  getProfile() {\n    return this._prof;\n  }\n  /**\n   * @description Specifies the level to use with the h264 codec and specified profile.\n   * @param {Qualifiers.VideoCodecLevel | number | string} lvl\n   * @example new AdvVideoCodecType('h264').profile(VideoCodecLevel.baseline())\n   * @return this;\n   */\n\n\n  level(lvl) {\n    this._lvl = lvl;\n    return this;\n  }\n\n  getLevel() {\n    return this._lvl;\n  }\n  /**\n   * @description returns a toString representation of this qualifier\n   * @return string;\n   */\n\n\n  toString() {\n    return `vc_${this._type}:${this._prof}:${this._lvl}`;\n  }\n\n}\n\nexport { VideoCodecType, AdvVideoCodecType };","map":{"version":3,"sources":["C:/Users/sonhe/OneDrive/Desktop/New folder/nhom6-csdlnc/client/node_modules/@cloudinary/url-gen/qualifiers/videoCodecType/VideoCodecType.js"],"names":["Qualifier","VideoCodecType","constructor","type","_type","addValue","getType","AdvVideoCodecType","profile","_prof","getProfile","level","lvl","_lvl","getLevel","toString"],"mappings":"AAAA,SAASA,SAAT,QAA0B,uCAA1B;AACA;AACA;AACA;AACA;;AACA,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AACnCE,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,UAAM,IAAN;AACA,SAAKC,KAAL,GAAaD,IAAb;AACA,SAAKE,QAAL,CAAcF,IAAd;AACH;;AACDG,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKF,KAAZ;AACH;;AARkC;AAUvC;AACA;AACA;AACA;;;AACA,MAAMG,iBAAN,SAAgCP,SAAhC,CAA0C;AACtCE,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,UAAM,IAAN;AACA,SAAKC,KAAL,GAAaD,IAAb;AACH;;AACDG,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKF,KAAZ;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACII,EAAAA,OAAO,CAACA,OAAD,EAAU;AACb,SAAKC,KAAL,GAAaD,OAAb;AACA,WAAO,IAAP;AACH;;AACDE,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKD,KAAZ;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIE,EAAAA,KAAK,CAACC,GAAD,EAAM;AACP,SAAKC,IAAL,GAAYD,GAAZ;AACA,WAAO,IAAP;AACH;;AACDE,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKD,IAAZ;AACH;AACD;AACJ;AACA;AACA;;;AACIE,EAAAA,QAAQ,GAAG;AACP,WAAQ,MAAK,KAAKX,KAAM,IAAG,KAAKK,KAAM,IAAG,KAAKI,IAAK,EAAnD;AACH;;AAxCqC;;AA0C1C,SAASZ,cAAT,EAAyBM,iBAAzB","sourcesContent":["import { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description A VideoCodec class, this class has no methods, and just sets the codec type (vp9, vp8, etc.)\n * @memberOf Qualifiers.VideoCodec\n */\nclass VideoCodecType extends Qualifier {\n    constructor(type) {\n        super('vc');\n        this._type = type;\n        this.addValue(type);\n    }\n    getType() {\n        return this._type;\n    }\n}\n/**\n * @description An Advanced VideoCodec class with Profile and Level methods\n * @memberOf Qualifiers.VideoCodec\n */\nclass AdvVideoCodecType extends Qualifier {\n    constructor(type) {\n        super('vc');\n        this._type = type;\n    }\n    getType() {\n        return this._type;\n    }\n    /**\n     * @description Specifies the profile to use with the h264 codec.\n     * @param {Qualifiers.VideoCodecProfile | string} profile Sets the profile of the video codec\n     * @example new AdvVideoCodecType('h264').profile(VideoCodecProfile.baseline())\n     * @return this;\n     */\n    profile(profile) {\n        this._prof = profile;\n        return this;\n    }\n    getProfile() {\n        return this._prof;\n    }\n    /**\n     * @description Specifies the level to use with the h264 codec and specified profile.\n     * @param {Qualifiers.VideoCodecLevel | number | string} lvl\n     * @example new AdvVideoCodecType('h264').profile(VideoCodecLevel.baseline())\n     * @return this;\n     */\n    level(lvl) {\n        this._lvl = lvl;\n        return this;\n    }\n    getLevel() {\n        return this._lvl;\n    }\n    /**\n     * @description returns a toString representation of this qualifier\n     * @return string;\n     */\n    toString() {\n        return `vc_${this._type}:${this._prof}:${this._lvl}`;\n    }\n}\nexport { VideoCodecType, AdvVideoCodecType };\n"]},"metadata":{},"sourceType":"module"}