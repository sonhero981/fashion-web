{"ast":null,"code":"import { Action } from \"../../../internal/Action.js\";\nimport { QualifierValue } from \"../../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../../internal/qualifier/Qualifier.js\";\nimport { ACTION_TYPE_TO_EFFECT_MODE_MAP, EFFECT_MODE_TO_ACTION_TYPE_MAP } from \"../../../internal/internalConstants.js\";\n/**\n * @description A class that defines a simple effect of the type e_{effectName}\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nclass SimpleEffectAction extends Action {\n  constructor(effectType, level) {\n    super();\n    this._actionModel = {};\n    this._actionModel.actionType = EFFECT_MODE_TO_ACTION_TYPE_MAP[effectType] || effectType;\n    const qualifierEffect = this.createEffectQualifier(effectType, level);\n    this.addQualifier(qualifierEffect);\n  }\n\n  createEffectQualifier(effectType, level) {\n    let qualifierValue;\n\n    if (level) {\n      qualifierValue = new QualifierValue([effectType, `${level}`]).setDelimiter(':');\n    } else {\n      qualifierValue = new QualifierValue(effectType);\n    }\n\n    return new Qualifier('e', qualifierValue);\n  }\n\n  static fromJson(actionModel) {\n    const {\n      actionType,\n      level,\n      strength\n    } = actionModel;\n    const effectType = ACTION_TYPE_TO_EFFECT_MODE_MAP[actionType] || actionType; // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n    // This allows the inheriting classes to determine the class to be created\n    // @ts-ignore\n\n    const result = new this(effectType, level ? level : strength);\n    return result;\n  }\n\n}\n\nexport { SimpleEffectAction };","map":{"version":3,"sources":["C:/Users/sonhe/OneDrive/Desktop/New folder/nhom6-csdlnc/client/node_modules/@cloudinary/url-gen/actions/effect/EffectActions/SimpleEffectAction.js"],"names":["Action","QualifierValue","Qualifier","ACTION_TYPE_TO_EFFECT_MODE_MAP","EFFECT_MODE_TO_ACTION_TYPE_MAP","SimpleEffectAction","constructor","effectType","level","_actionModel","actionType","qualifierEffect","createEffectQualifier","addQualifier","qualifierValue","setDelimiter","fromJson","actionModel","strength","result"],"mappings":"AAAA,SAASA,MAAT,QAAuB,6BAAvB;AACA,SAASC,cAAT,QAA+B,+CAA/B;AACA,SAASC,SAAT,QAA0B,0CAA1B;AACA,SAASC,8BAAT,EAAyCC,8BAAzC,QAA+E,wCAA/E;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,kBAAN,SAAiCL,MAAjC,CAAwC;AACpCM,EAAAA,WAAW,CAACC,UAAD,EAAaC,KAAb,EAAoB;AAC3B;AACA,SAAKC,YAAL,GAAoB,EAApB;AACA,SAAKA,YAAL,CAAkBC,UAAlB,GAA+BN,8BAA8B,CAACG,UAAD,CAA9B,IAA8CA,UAA7E;AACA,UAAMI,eAAe,GAAG,KAAKC,qBAAL,CAA2BL,UAA3B,EAAuCC,KAAvC,CAAxB;AACA,SAAKK,YAAL,CAAkBF,eAAlB;AACH;;AACDC,EAAAA,qBAAqB,CAACL,UAAD,EAAaC,KAAb,EAAoB;AACrC,QAAIM,cAAJ;;AACA,QAAIN,KAAJ,EAAW;AACPM,MAAAA,cAAc,GAAG,IAAIb,cAAJ,CAAmB,CAACM,UAAD,EAAc,GAAEC,KAAM,EAAtB,CAAnB,EAA6CO,YAA7C,CAA0D,GAA1D,CAAjB;AACH,KAFD,MAGK;AACDD,MAAAA,cAAc,GAAG,IAAIb,cAAJ,CAAmBM,UAAnB,CAAjB;AACH;;AACD,WAAO,IAAIL,SAAJ,CAAc,GAAd,EAAmBY,cAAnB,CAAP;AACH;;AACc,SAARE,QAAQ,CAACC,WAAD,EAAc;AACzB,UAAM;AAAEP,MAAAA,UAAF;AAAcF,MAAAA,KAAd;AAAqBU,MAAAA;AAArB,QAAkCD,WAAxC;AACA,UAAMV,UAAU,GAAGJ,8BAA8B,CAACO,UAAD,CAA9B,IAA8CA,UAAjE,CAFyB,CAGzB;AACA;AACA;;AACA,UAAMS,MAAM,GAAG,IAAI,IAAJ,CAASZ,UAAT,EAAqBC,KAAK,GAAGA,KAAH,GAAWU,QAArC,CAAf;AACA,WAAOC,MAAP;AACH;;AA1BmC;;AA4BxC,SAASd,kBAAT","sourcesContent":["import { Action } from \"../../../internal/Action.js\";\nimport { QualifierValue } from \"../../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../../internal/qualifier/Qualifier.js\";\nimport { ACTION_TYPE_TO_EFFECT_MODE_MAP, EFFECT_MODE_TO_ACTION_TYPE_MAP } from \"../../../internal/internalConstants.js\";\n/**\n * @description A class that defines a simple effect of the type e_{effectName}\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass SimpleEffectAction extends Action {\n    constructor(effectType, level) {\n        super();\n        this._actionModel = {};\n        this._actionModel.actionType = EFFECT_MODE_TO_ACTION_TYPE_MAP[effectType] || effectType;\n        const qualifierEffect = this.createEffectQualifier(effectType, level);\n        this.addQualifier(qualifierEffect);\n    }\n    createEffectQualifier(effectType, level) {\n        let qualifierValue;\n        if (level) {\n            qualifierValue = new QualifierValue([effectType, `${level}`]).setDelimiter(':');\n        }\n        else {\n            qualifierValue = new QualifierValue(effectType);\n        }\n        return new Qualifier('e', qualifierValue);\n    }\n    static fromJson(actionModel) {\n        const { actionType, level, strength } = actionModel;\n        const effectType = ACTION_TYPE_TO_EFFECT_MODE_MAP[actionType] || actionType;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        // @ts-ignore\n        const result = new this(effectType, level ? level : strength);\n        return result;\n    }\n}\nexport { SimpleEffectAction };\n"]},"metadata":{},"sourceType":"module"}