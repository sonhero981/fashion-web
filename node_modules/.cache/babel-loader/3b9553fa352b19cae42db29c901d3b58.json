{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description Applies stripes to the image to help people with common color-blind conditions to differentiate between colors that are similar for them.\n *              You can replace colors using the xray() method.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nclass AssistColorBlindEffectAction extends Action {\n  constructor() {\n    super();\n    this._actionModel = {};\n    this._actionModel.actionType = 'assistColorblind';\n    this.addQualifier(new Qualifier('e', new QualifierValue('assist_colorblind')));\n  }\n  /**\n   * @description Replaces problematic colors with colors that are easier to differentiate.\n   * @return {this}\n   */\n\n\n  xray() {\n    this._actionModel.type = 'xray';\n    return this.addQualifier(new Qualifier('e', new QualifierValue(['assist_colorblind', 'xray']).setDelimiter(':')));\n  }\n  /**\n   * @description Applies stripes of the specified intensity to help people with common color blind conditions to differentiate between colors that are similar for them.\n   * @param {number | string} strength The intensity of the stripes. (Range: 1 to 100, Server default: 10)\n   * @return {this}\n   */\n\n\n  stripesStrength(strength) {\n    this._actionModel.type = 'stripes';\n    this._actionModel.stripesStrength = strength;\n    return this.addQualifier(new Qualifier('e', new QualifierValue(['assist_colorblind', strength]).setDelimiter(':')));\n  }\n\n  static fromJson(actionModel) {\n    const {\n      actionType,\n      type,\n      stripesStrength\n    } = actionModel; // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n    // This allows the inheriting classes to determine the class to be created\n\n    const result = new this();\n\n    if (type === 'xray') {\n      result.xray();\n    }\n\n    if (type === 'stripes') {\n      stripesStrength && result.stripesStrength(stripesStrength);\n    }\n\n    return result;\n  }\n\n}\n\nexport { AssistColorBlindEffectAction };","map":{"version":3,"sources":["C:/Users/sonhe/OneDrive/Desktop/New folder/nhom6-csdlnc/client/node_modules/@cloudinary/url-gen/actions/effect/AssistColorBlind.js"],"names":["Action","QualifierValue","Qualifier","AssistColorBlindEffectAction","constructor","_actionModel","actionType","addQualifier","xray","type","setDelimiter","stripesStrength","strength","fromJson","actionModel","result"],"mappings":"AAAA,SAASA,MAAT,QAAuB,0BAAvB;AACA,SAASC,cAAT,QAA+B,4CAA/B;AACA,SAASC,SAAT,QAA0B,uCAA1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,4BAAN,SAA2CH,MAA3C,CAAkD;AAC9CI,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,YAAL,GAAoB,EAApB;AACA,SAAKA,YAAL,CAAkBC,UAAlB,GAA+B,kBAA/B;AACA,SAAKC,YAAL,CAAkB,IAAIL,SAAJ,CAAc,GAAd,EAAmB,IAAID,cAAJ,CAAmB,mBAAnB,CAAnB,CAAlB;AACH;AACD;AACJ;AACA;AACA;;;AACIO,EAAAA,IAAI,GAAG;AACH,SAAKH,YAAL,CAAkBI,IAAlB,GAAyB,MAAzB;AACA,WAAO,KAAKF,YAAL,CAAkB,IAAIL,SAAJ,CAAc,GAAd,EAAmB,IAAID,cAAJ,CAAmB,CAAC,mBAAD,EAAsB,MAAtB,CAAnB,EAAkDS,YAAlD,CAA+D,GAA/D,CAAnB,CAAlB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIC,EAAAA,eAAe,CAACC,QAAD,EAAW;AACtB,SAAKP,YAAL,CAAkBI,IAAlB,GAAyB,SAAzB;AACA,SAAKJ,YAAL,CAAkBM,eAAlB,GAAoCC,QAApC;AACA,WAAO,KAAKL,YAAL,CAAkB,IAAIL,SAAJ,CAAc,GAAd,EAAmB,IAAID,cAAJ,CAAmB,CAAC,mBAAD,EAAsBW,QAAtB,CAAnB,EAAoDF,YAApD,CAAiE,GAAjE,CAAnB,CAAlB,CAAP;AACH;;AACc,SAARG,QAAQ,CAACC,WAAD,EAAc;AACzB,UAAM;AAAER,MAAAA,UAAF;AAAcG,MAAAA,IAAd;AAAoBE,MAAAA;AAApB,QAAwCG,WAA9C,CADyB,CAEzB;AACA;;AACA,UAAMC,MAAM,GAAG,IAAI,IAAJ,EAAf;;AACA,QAAIN,IAAI,KAAK,MAAb,EAAqB;AACjBM,MAAAA,MAAM,CAACP,IAAP;AACH;;AACD,QAAIC,IAAI,KAAK,SAAb,EAAwB;AACpBE,MAAAA,eAAe,IAAII,MAAM,CAACJ,eAAP,CAAuBA,eAAvB,CAAnB;AACH;;AACD,WAAOI,MAAP;AACH;;AArC6C;;AAuClD,SAASZ,4BAAT","sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description Applies stripes to the image to help people with common color-blind conditions to differentiate between colors that are similar for them.\n *              You can replace colors using the xray() method.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass AssistColorBlindEffectAction extends Action {\n    constructor() {\n        super();\n        this._actionModel = {};\n        this._actionModel.actionType = 'assistColorblind';\n        this.addQualifier(new Qualifier('e', new QualifierValue('assist_colorblind')));\n    }\n    /**\n     * @description Replaces problematic colors with colors that are easier to differentiate.\n     * @return {this}\n     */\n    xray() {\n        this._actionModel.type = 'xray';\n        return this.addQualifier(new Qualifier('e', new QualifierValue(['assist_colorblind', 'xray']).setDelimiter(':')));\n    }\n    /**\n     * @description Applies stripes of the specified intensity to help people with common color blind conditions to differentiate between colors that are similar for them.\n     * @param {number | string} strength The intensity of the stripes. (Range: 1 to 100, Server default: 10)\n     * @return {this}\n     */\n    stripesStrength(strength) {\n        this._actionModel.type = 'stripes';\n        this._actionModel.stripesStrength = strength;\n        return this.addQualifier(new Qualifier('e', new QualifierValue(['assist_colorblind', strength]).setDelimiter(':')));\n    }\n    static fromJson(actionModel) {\n        const { actionType, type, stripesStrength } = actionModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this();\n        if (type === 'xray') {\n            result.xray();\n        }\n        if (type === 'stripes') {\n            stripesStrength && result.stripesStrength(stripesStrength);\n        }\n        return result;\n    }\n}\nexport { AssistColorBlindEffectAction };\n"]},"metadata":{},"sourceType":"module"}