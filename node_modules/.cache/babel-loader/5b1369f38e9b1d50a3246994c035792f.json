{"ast":null,"code":"import { BaseTextSource } from \"./BaseTextSource.js\";\nimport { createTextStyleFromModel } from \"../../../internal/models/createTextStyleFromModel.js\";\n/**\n * @memberOf Qualifiers.Source\n * @extends {Qualifiers.Source.BaseTextSource}\n * @description Defines how to manipulate a text layer\n */\n\nclass TextSource extends BaseTextSource {\n  constructor(fileName, textStyle) {\n    /* istanbul ignore next */\n    super(fileName, textStyle);\n  }\n\n  static fromJson(qualifierModel, transformationFromJson) {\n    const {\n      text,\n      textStyle,\n      textColor,\n      backgroundColor,\n      transformation\n    } = qualifierModel; // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [qualifierModel])\n    // This allows the inheriting classes to determine the class to be created\n\n    const result = new this(text, textStyle ? createTextStyleFromModel(textStyle) : undefined);\n\n    if (transformation) {\n      result.transformation(transformationFromJson(transformation));\n    }\n\n    if (textColor) {\n      result.textColor(textColor);\n    }\n\n    if (backgroundColor) {\n      result.backgroundColor(backgroundColor);\n    }\n\n    return result;\n  }\n\n}\n\nexport { TextSource };","map":{"version":3,"sources":["C:/Users/sonhe/OneDrive/Desktop/New folder/nhom6-csdlnc/client/node_modules/@cloudinary/url-gen/qualifiers/source/sourceTypes/TextSource.js"],"names":["BaseTextSource","createTextStyleFromModel","TextSource","constructor","fileName","textStyle","fromJson","qualifierModel","transformationFromJson","text","textColor","backgroundColor","transformation","result","undefined"],"mappings":"AAAA,SAASA,cAAT,QAA+B,qBAA/B;AACA,SAASC,wBAAT,QAAyC,sDAAzC;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,UAAN,SAAyBF,cAAzB,CAAwC;AACpCG,EAAAA,WAAW,CAACC,QAAD,EAAWC,SAAX,EAAsB;AAC7B;AACA,UAAMD,QAAN,EAAgBC,SAAhB;AACH;;AACc,SAARC,QAAQ,CAACC,cAAD,EAAiBC,sBAAjB,EAAyC;AACpD,UAAM;AAAEC,MAAAA,IAAF;AAAQJ,MAAAA,SAAR;AAAmBK,MAAAA,SAAnB;AAA8BC,MAAAA,eAA9B;AAA+CC,MAAAA;AAA/C,QAAkEL,cAAxE,CADoD,CAEpD;AACA;;AACA,UAAMM,MAAM,GAAG,IAAI,IAAJ,CAASJ,IAAT,EAAeJ,SAAS,GAAGJ,wBAAwB,CAACI,SAAD,CAA3B,GAAyCS,SAAjE,CAAf;;AACA,QAAIF,cAAJ,EAAoB;AAChBC,MAAAA,MAAM,CAACD,cAAP,CAAsBJ,sBAAsB,CAACI,cAAD,CAA5C;AACH;;AACD,QAAIF,SAAJ,EAAe;AACXG,MAAAA,MAAM,CAACH,SAAP,CAAiBA,SAAjB;AACH;;AACD,QAAIC,eAAJ,EAAqB;AACjBE,MAAAA,MAAM,CAACF,eAAP,CAAuBA,eAAvB;AACH;;AACD,WAAOE,MAAP;AACH;;AApBmC;;AAsBxC,SAASX,UAAT","sourcesContent":["import { BaseTextSource } from \"./BaseTextSource.js\";\nimport { createTextStyleFromModel } from \"../../../internal/models/createTextStyleFromModel.js\";\n/**\n * @memberOf Qualifiers.Source\n * @extends {Qualifiers.Source.BaseTextSource}\n * @description Defines how to manipulate a text layer\n */\nclass TextSource extends BaseTextSource {\n    constructor(fileName, textStyle) {\n        /* istanbul ignore next */\n        super(fileName, textStyle);\n    }\n    static fromJson(qualifierModel, transformationFromJson) {\n        const { text, textStyle, textColor, backgroundColor, transformation } = qualifierModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [qualifierModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this(text, textStyle ? createTextStyleFromModel(textStyle) : undefined);\n        if (transformation) {\n            result.transformation(transformationFromJson(transformation));\n        }\n        if (textColor) {\n            result.textColor(textColor);\n        }\n        if (backgroundColor) {\n            result.backgroundColor(backgroundColor);\n        }\n        return result;\n    }\n}\nexport { TextSource };\n"]},"metadata":{},"sourceType":"module"}