{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { AdvVideoCodecType } from \"../../qualifiers/videoCodecType/VideoCodecType.js\";\nimport { VIDEO_CODEC_TO_TRANSFORMATION } from \"../../qualifiers/videoCodec.js\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description Converts a video to an animated webp or gif.\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\n\nclass VideoCodecAction extends Action {\n  constructor(videoCodecTypeQualifier) {\n    super();\n    this._actionModel = {\n      actionType: 'videoCodec'\n    };\n    this._actionModel.videoCodec = {\n      videoCodecName: videoCodecTypeQualifier.getType()\n    };\n\n    if (videoCodecTypeQualifier instanceof AdvVideoCodecType) {\n      if (videoCodecTypeQualifier.getProfile()) {\n        this._actionModel.videoCodec = Object.assign({\n          profile: videoCodecTypeQualifier.getProfile()\n        }, this._actionModel.videoCodec);\n      }\n\n      if (videoCodecTypeQualifier.getLevel()) {\n        this._actionModel.videoCodec = Object.assign({\n          level: videoCodecTypeQualifier.getLevel()\n        }, this._actionModel.videoCodec);\n      }\n    }\n\n    this.addQualifier(videoCodecTypeQualifier);\n  }\n\n  static fromJson(actionModel) {\n    const {\n      videoCodec\n    } = actionModel; // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n    // This allows the inheriting classes to determine the class to be created\n\n    const result = new this(VIDEO_CODEC_TO_TRANSFORMATION[videoCodec.videoCodecName]); //@ts-ignore\n\n    videoCodec.profile && new this(VIDEO_CODEC_TO_TRANSFORMATION[videoCodec.videoCodecName].profile(videoCodec.profile)); //@ts-ignore\n\n    videoCodec.level && new this(VIDEO_CODEC_TO_TRANSFORMATION[videoCodec.videoCodecName].level(videoCodec.level));\n    return result;\n  }\n\n}\n\nexport { VideoCodecAction };","map":{"version":3,"sources":["C:/Users/sonhe/OneDrive/Desktop/New folder/nhom6-csdlnc/client/node_modules/@cloudinary/url-gen/actions/transcode/VideoCodecAction.js"],"names":["Action","AdvVideoCodecType","VIDEO_CODEC_TO_TRANSFORMATION","VideoCodecAction","constructor","videoCodecTypeQualifier","_actionModel","actionType","videoCodec","videoCodecName","getType","getProfile","Object","assign","profile","getLevel","level","addQualifier","fromJson","actionModel","result"],"mappings":"AAAA,SAASA,MAAT,QAAuB,0BAAvB;AACA,SAASC,iBAAT,QAAkC,mDAAlC;AACA,SAASC,6BAAT,QAA8C,gCAA9C;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,gBAAN,SAA+BH,MAA/B,CAAsC;AAClCI,EAAAA,WAAW,CAACC,uBAAD,EAA0B;AACjC;AACA,SAAKC,YAAL,GAAoB;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAApB;AACA,SAAKD,YAAL,CAAkBE,UAAlB,GAA+B;AAAEC,MAAAA,cAAc,EAAEJ,uBAAuB,CAACK,OAAxB;AAAlB,KAA/B;;AACA,QAAIL,uBAAuB,YAAYJ,iBAAvC,EAA0D;AACtD,UAAII,uBAAuB,CAACM,UAAxB,EAAJ,EAA0C;AACtC,aAAKL,YAAL,CAAkBE,UAAlB,GAA+BI,MAAM,CAACC,MAAP,CAAc;AAAEC,UAAAA,OAAO,EAAET,uBAAuB,CAACM,UAAxB;AAAX,SAAd,EAAiE,KAAKL,YAAL,CAAkBE,UAAnF,CAA/B;AACH;;AACD,UAAIH,uBAAuB,CAACU,QAAxB,EAAJ,EAAwC;AACpC,aAAKT,YAAL,CAAkBE,UAAlB,GAA+BI,MAAM,CAACC,MAAP,CAAc;AAAEG,UAAAA,KAAK,EAAEX,uBAAuB,CAACU,QAAxB;AAAT,SAAd,EAA6D,KAAKT,YAAL,CAAkBE,UAA/E,CAA/B;AACH;AACJ;;AACD,SAAKS,YAAL,CAAkBZ,uBAAlB;AACH;;AACc,SAARa,QAAQ,CAACC,WAAD,EAAc;AACzB,UAAM;AAAEX,MAAAA;AAAF,QAAiBW,WAAvB,CADyB,CAEzB;AACA;;AACA,UAAMC,MAAM,GAAG,IAAI,IAAJ,CAASlB,6BAA6B,CAACM,UAAU,CAACC,cAAZ,CAAtC,CAAf,CAJyB,CAKzB;;AACAD,IAAAA,UAAU,CAACM,OAAX,IAAsB,IAAI,IAAJ,CAASZ,6BAA6B,CAACM,UAAU,CAACC,cAAZ,CAA7B,CAAyDK,OAAzD,CAAiEN,UAAU,CAACM,OAA5E,CAAT,CAAtB,CANyB,CAOzB;;AACAN,IAAAA,UAAU,CAACQ,KAAX,IAAoB,IAAI,IAAJ,CAASd,6BAA6B,CAACM,UAAU,CAACC,cAAZ,CAA7B,CAAyDO,KAAzD,CAA+DR,UAAU,CAACQ,KAA1E,CAAT,CAApB;AACA,WAAOI,MAAP;AACH;;AAzBiC;;AA2BtC,SAASjB,gBAAT","sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { AdvVideoCodecType } from \"../../qualifiers/videoCodecType/VideoCodecType.js\";\nimport { VIDEO_CODEC_TO_TRANSFORMATION } from \"../../qualifiers/videoCodec.js\";\n/**\n * @extends SDK.Action\n * @memberOf Actions.Transcode\n * @description Converts a video to an animated webp or gif.\n * @see Visit {@link Actions.Transcode|Transcode} for an example\n */\nclass VideoCodecAction extends Action {\n    constructor(videoCodecTypeQualifier) {\n        super();\n        this._actionModel = { actionType: 'videoCodec' };\n        this._actionModel.videoCodec = { videoCodecName: videoCodecTypeQualifier.getType() };\n        if (videoCodecTypeQualifier instanceof AdvVideoCodecType) {\n            if (videoCodecTypeQualifier.getProfile()) {\n                this._actionModel.videoCodec = Object.assign({ profile: videoCodecTypeQualifier.getProfile() }, this._actionModel.videoCodec);\n            }\n            if (videoCodecTypeQualifier.getLevel()) {\n                this._actionModel.videoCodec = Object.assign({ level: videoCodecTypeQualifier.getLevel() }, this._actionModel.videoCodec);\n            }\n        }\n        this.addQualifier(videoCodecTypeQualifier);\n    }\n    static fromJson(actionModel) {\n        const { videoCodec } = actionModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this(VIDEO_CODEC_TO_TRANSFORMATION[videoCodec.videoCodecName]);\n        //@ts-ignore\n        videoCodec.profile && new this(VIDEO_CODEC_TO_TRANSFORMATION[videoCodec.videoCodecName].profile(videoCodec.profile));\n        //@ts-ignore\n        videoCodec.level && new this(VIDEO_CODEC_TO_TRANSFORMATION[videoCodec.videoCodecName].level(videoCodec.level));\n        return result;\n    }\n}\nexport { VideoCodecAction };\n"]},"metadata":{},"sourceType":"module"}