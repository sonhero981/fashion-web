{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description Class for shortening a video to the specified range.\n * @extends SDK.Action\n * @memberOf Actions.VideoEdit\n * @see Visit {@link Actions.VideoEdit|VideoEdit} for an example\n */\n\nclass TrimAction extends Action {\n  constructor() {\n    super();\n    this._actionModel = {\n      actionType: 'trimVideo'\n    };\n  }\n  /**\n   *\n   * @description Support Percentages in values (30% -> 30p)\n   * @param {string|number} val\n   * @private\n   * @return {string}\n   */\n\n\n  parseVal(val) {\n    return typeof val === 'number' ? val : val.replace('%', 'p');\n  }\n  /**\n   * @description Sets the starting position of the part of the video to keep when trimming videos.\n   *\n   * @param {string|number} offset The starting position of the part of the video to keep. This can be specified as a\n   *                           float representing the time in seconds or a string representing the percentage of the\n   *                           video length (for example, \"30%\" or \"30p\").\n   * @return {this}\n   */\n\n\n  startOffset(offset) {\n    this._actionModel.startOffset = +offset;\n    return this.addQualifier(new Qualifier('so', this.parseVal(offset)));\n  }\n  /**\n   * @description Sets the end position of the part of the video to keep when trimming videos.\n   *\n   * @param {string|number} offset The end position of the part of the video to keep. This can be specified as a\n   *                         float representing the time in seconds or a string representing the percentage of the\n   *                         video length (for example, \"30%\" or \"30p\").\n   * @return {this}\n   */\n\n\n  endOffset(offset) {\n    this._actionModel.endOffset = +offset;\n    return this.addQualifier(new Qualifier('eo', this.parseVal(offset)));\n  }\n  /**\n   * @description Sets the duration of the video to keep.\n   *\n   * @param {string|number} duration The length of the part of the video to keep. This can be specified as a float\n   *                        representing the time in seconds or a string representing the percentage of the\n   *                        video length (for example, \"30%\" or \"30p\").\n   * @return {this}\n   */\n\n\n  duration(duration) {\n    this._actionModel.duration = duration;\n    return this.addQualifier(new Qualifier('du', this.parseVal(duration)));\n  }\n\n  static fromJson(actionModel) {\n    const {\n      duration,\n      startOffset,\n      endOffset\n    } = actionModel; // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n    // This allows the inheriting classes to determine the class to be created\n\n    const result = new this();\n\n    if (duration != null) {\n      result.duration(duration);\n    }\n\n    if (startOffset != null) {\n      result.startOffset(startOffset);\n    }\n\n    if (endOffset != null) {\n      result.endOffset(endOffset);\n    }\n\n    return result;\n  }\n\n}\n\nexport default TrimAction;","map":{"version":3,"sources":["C:/Users/sonhe/OneDrive/Desktop/New folder/nhom6-csdlnc/client/node_modules/@cloudinary/url-gen/actions/videoEdit/TrimAction.js"],"names":["Action","Qualifier","TrimAction","constructor","_actionModel","actionType","parseVal","val","replace","startOffset","offset","addQualifier","endOffset","duration","fromJson","actionModel","result"],"mappings":"AAAA,SAASA,MAAT,QAAuB,0BAAvB;AACA,SAASC,SAAT,QAA0B,uCAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,UAAN,SAAyBF,MAAzB,CAAgC;AAC5BG,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,YAAL,GAAoB;AAChBC,MAAAA,UAAU,EAAE;AADI,KAApB;AAGH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIC,EAAAA,QAAQ,CAACC,GAAD,EAAM;AACV,WAAO,OAAOA,GAAP,KAAe,QAAf,GAA0BA,GAA1B,GAAgCA,GAAG,CAACC,OAAJ,CAAY,GAAZ,EAAiB,GAAjB,CAAvC;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAChB,SAAKN,YAAL,CAAkBK,WAAlB,GAAgC,CAACC,MAAjC;AACA,WAAO,KAAKC,YAAL,CAAkB,IAAIV,SAAJ,CAAc,IAAd,EAAoB,KAAKK,QAAL,CAAcI,MAAd,CAApB,CAAlB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIE,EAAAA,SAAS,CAACF,MAAD,EAAS;AACd,SAAKN,YAAL,CAAkBQ,SAAlB,GAA8B,CAACF,MAA/B;AACA,WAAO,KAAKC,YAAL,CAAkB,IAAIV,SAAJ,CAAc,IAAd,EAAoB,KAAKK,QAAL,CAAcI,MAAd,CAApB,CAAlB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIG,EAAAA,QAAQ,CAACA,QAAD,EAAW;AACf,SAAKT,YAAL,CAAkBS,QAAlB,GAA6BA,QAA7B;AACA,WAAO,KAAKF,YAAL,CAAkB,IAAIV,SAAJ,CAAc,IAAd,EAAoB,KAAKK,QAAL,CAAcO,QAAd,CAApB,CAAlB,CAAP;AACH;;AACc,SAARC,QAAQ,CAACC,WAAD,EAAc;AACzB,UAAM;AAAEF,MAAAA,QAAF;AAAYJ,MAAAA,WAAZ;AAAyBG,MAAAA;AAAzB,QAAuCG,WAA7C,CADyB,CAEzB;AACA;;AACA,UAAMC,MAAM,GAAG,IAAI,IAAJ,EAAf;;AACA,QAAIH,QAAQ,IAAI,IAAhB,EAAsB;AAClBG,MAAAA,MAAM,CAACH,QAAP,CAAgBA,QAAhB;AACH;;AACD,QAAIJ,WAAW,IAAI,IAAnB,EAAyB;AACrBO,MAAAA,MAAM,CAACP,WAAP,CAAmBA,WAAnB;AACH;;AACD,QAAIG,SAAS,IAAI,IAAjB,EAAuB;AACnBI,MAAAA,MAAM,CAACJ,SAAP,CAAiBA,SAAjB;AACH;;AACD,WAAOI,MAAP;AACH;;AApE2B;;AAsEhC,eAAed,UAAf","sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\n/**\n * @description Class for shortening a video to the specified range.\n * @extends SDK.Action\n * @memberOf Actions.VideoEdit\n * @see Visit {@link Actions.VideoEdit|VideoEdit} for an example\n */\nclass TrimAction extends Action {\n    constructor() {\n        super();\n        this._actionModel = {\n            actionType: 'trimVideo'\n        };\n    }\n    /**\n     *\n     * @description Support Percentages in values (30% -> 30p)\n     * @param {string|number} val\n     * @private\n     * @return {string}\n     */\n    parseVal(val) {\n        return typeof val === 'number' ? val : val.replace('%', 'p');\n    }\n    /**\n     * @description Sets the starting position of the part of the video to keep when trimming videos.\n     *\n     * @param {string|number} offset The starting position of the part of the video to keep. This can be specified as a\n     *                           float representing the time in seconds or a string representing the percentage of the\n     *                           video length (for example, \"30%\" or \"30p\").\n     * @return {this}\n     */\n    startOffset(offset) {\n        this._actionModel.startOffset = +offset;\n        return this.addQualifier(new Qualifier('so', this.parseVal(offset)));\n    }\n    /**\n     * @description Sets the end position of the part of the video to keep when trimming videos.\n     *\n     * @param {string|number} offset The end position of the part of the video to keep. This can be specified as a\n     *                         float representing the time in seconds or a string representing the percentage of the\n     *                         video length (for example, \"30%\" or \"30p\").\n     * @return {this}\n     */\n    endOffset(offset) {\n        this._actionModel.endOffset = +offset;\n        return this.addQualifier(new Qualifier('eo', this.parseVal(offset)));\n    }\n    /**\n     * @description Sets the duration of the video to keep.\n     *\n     * @param {string|number} duration The length of the part of the video to keep. This can be specified as a float\n     *                        representing the time in seconds or a string representing the percentage of the\n     *                        video length (for example, \"30%\" or \"30p\").\n     * @return {this}\n     */\n    duration(duration) {\n        this._actionModel.duration = duration;\n        return this.addQualifier(new Qualifier('du', this.parseVal(duration)));\n    }\n    static fromJson(actionModel) {\n        const { duration, startOffset, endOffset } = actionModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this();\n        if (duration != null) {\n            result.duration(duration);\n        }\n        if (startOffset != null) {\n            result.startOffset(startOffset);\n        }\n        if (endOffset != null) {\n            result.endOffset(endOffset);\n        }\n        return result;\n    }\n}\nexport default TrimAction;\n"]},"metadata":{},"sourceType":"module"}