{"ast":null,"code":"import { processLayer } from \"./transformationProcessing/processLayer.js\";\nimport { process_if } from \"./transformationProcessing/processIf.js\";\nimport { toArray } from \"./utils/toArray.js\";\nimport { processRadius } from \"./transformationProcessing/processRadius.js\";\nimport { isObject } from \"./utils/isObject.js\";\nimport { processCustomFunction } from \"./transformationProcessing/processCustomFunction.js\";\nimport { processCustomPreFunction } from \"./transformationProcessing/processCustomPreFunction.js\";\nimport { splitRange } from \"./utils/splitRange.js\";\nimport { legacyNormalizeExpression } from \"./utils/legacyNormalizeExpression.js\";\nimport { normRangeValues } from \"./utils/norm_range_values.js\";\nimport { processVideoParams } from \"./transformationProcessing/processVideoParams.js\";\nimport Transformation from \"./transformation.js\";\nimport { processDpr } from \"./transformationProcessing/processDpr.js\";\n/**\n * Things dropped\n * - responsive_width\n * - config().dpr\n * - SSL Detected\n * - Provisioning API\n * - Magical configuration auto-mapping (everything has to be explicit)\n * - Signatures\n * - Secure is default true\n * @param transformationOptions\n */\n\nexport function generateTransformationString(transformationOptions) {\n  if (typeof transformationOptions === 'string') {\n    return transformationOptions;\n  }\n\n  if (transformationOptions instanceof Transformation) {\n    return transformationOptions.toString();\n  }\n\n  if (Array.isArray(transformationOptions)) {\n    return transformationOptions.map(singleTransformation => {\n      return generateTransformationString(singleTransformation);\n    }).filter(a => {\n      return a;\n    }).join('/');\n  } // let responsive_width = consumeOption(transformationOptions, \"responsive_width\", config().responsive_width);\n\n\n  let width;\n  let height;\n  const size = transformationOptions.size;\n  const hasLayer = transformationOptions.overlay || transformationOptions.underlay;\n  const crop = transformationOptions.crop;\n  const angle = toArray(transformationOptions.angle).join(\".\");\n  const background = (transformationOptions.background || '').replace(/^#/, \"rgb:\");\n  const color = (transformationOptions.color || '').replace(/^#/, \"rgb:\");\n  const flags = toArray(transformationOptions.flags || []).join('.');\n  const dpr = transformationOptions.dpr === undefined ? transformationOptions.dpr : processDpr(transformationOptions.dpr);\n  const overlay = processLayer(transformationOptions.overlay);\n  const radius = processRadius(transformationOptions.radius);\n  const underlay = processLayer(transformationOptions.underlay);\n  const ifValue = process_if(transformationOptions.if);\n  const custom_function = processCustomFunction(transformationOptions.custom_function);\n  const custom_pre_function = processCustomPreFunction(transformationOptions.custom_pre_function); // These will change down the line, heads up!\n\n  let fps = transformationOptions.fps;\n  let namedTransformations = [];\n  let childTransformations = toArray(transformationOptions.transformation || []);\n  let effect = transformationOptions.effect; // TODO, Do we need this?\n\n  const no_html_sizes = hasLayer || angle || crop === \"fit\" || crop === \"limit\";\n\n  if (size) {\n    const [sizeWidth, sizeHeight] = size.split(\"x\");\n    width = sizeWidth;\n    height = sizeHeight;\n  } else {\n    width = transformationOptions.width;\n    height = transformationOptions.height;\n  }\n\n  if (width && (width.toString().indexOf(\"auto\") === 0 || no_html_sizes || parseFloat(width.toString()) < 1)) {\n    delete transformationOptions.width;\n  }\n\n  if (height && (no_html_sizes || parseFloat(height.toString()) < 1)) {\n    delete transformationOptions.height;\n  } // Is any child transformation an object?\n\n\n  const isAnyChildAnObject = childTransformations.some(transformation => typeof transformation === 'object'); // If array of objects, or array of strings?\n\n  if (isAnyChildAnObject) {\n    childTransformations = childTransformations.map(transformation => {\n      if (isObject(transformation)) {\n        return generateTransformationString(transformation);\n      } else {\n        return generateTransformationString({\n          transformation\n        });\n      }\n    }).filter(a => a);\n  } else {\n    namedTransformations = childTransformations.join(\".\");\n    childTransformations = []; // Reset child transfomrations\n  }\n\n  if (Array.isArray(effect)) {\n    effect = effect.join(\":\");\n  } else if (isObject(effect)) {\n    effect = Object.entries(effect).map(_ref => {\n      let [key, value] = _ref;\n      return `${key}:${value}`;\n    });\n  }\n\n  let border = transformationOptions.border;\n\n  if (isObject(border)) {\n    border = `${border.width != null ? border.width : 2}px_solid_${(border.color != null ? border.color : \"black\").replace(/^#/, 'rgb:')}`;\n  } else {\n    // @ts-ignore\n    if (/^\\d+$/.exec(border)) {\n      // fallback to html border attributes\n      transformationOptions.border = border;\n      border = void 0;\n    }\n  }\n\n  if (Array.isArray(fps)) {\n    fps = fps.join('-');\n  } // ocr(value) {\n  //   return this.param(value, \"ocr\", \"ocr\");\n  // }\n\n\n  const urlParams = {\n    a: legacyNormalizeExpression(angle),\n    ar: legacyNormalizeExpression(transformationOptions.aspect_ratio),\n    b: background,\n    bo: border,\n    c: crop,\n    co: color,\n    dpr: legacyNormalizeExpression(dpr),\n    e: legacyNormalizeExpression(effect),\n    fl: flags,\n    fn: custom_function || custom_pre_function,\n    fps: fps,\n    h: legacyNormalizeExpression(height),\n    ki: legacyNormalizeExpression(transformationOptions.keyframe_interval),\n    l: overlay,\n    o: legacyNormalizeExpression(transformationOptions.opacity),\n    q: legacyNormalizeExpression(transformationOptions.quality),\n    r: radius,\n    t: namedTransformations,\n    u: underlay,\n    w: legacyNormalizeExpression(width),\n    x: legacyNormalizeExpression(transformationOptions.x),\n    y: legacyNormalizeExpression(transformationOptions.y),\n    z: legacyNormalizeExpression(transformationOptions.zoom),\n    ac: transformationOptions.audio_codec,\n    af: transformationOptions.audio_frequency,\n    br: transformationOptions.bit_rate,\n    cs: transformationOptions.color_space,\n    d: transformationOptions.default_image,\n    dl: transformationOptions.delay,\n    dn: transformationOptions.density,\n    du: normRangeValues(transformationOptions.duration),\n    eo: normRangeValues(splitRange(transformationOptions.offset)[1]),\n    f: transformationOptions.fetch_format,\n    g: transformationOptions.gravity,\n    pg: transformationOptions.page,\n    p: transformationOptions.prefix,\n    so: normRangeValues(splitRange(transformationOptions.offset)[0]),\n    sp: transformationOptions.streaming_profile,\n    vc: processVideoParams(transformationOptions.video_codec),\n    vs: transformationOptions.video_sampling\n  }; // We can accept variables in here transformationOptions, or in here transformationOptions.variables\n\n  const variables = Object.entries(transformationOptions).filter(_ref2 => {\n    let [key, value] = _ref2;\n    return key.startsWith('$');\n  }).map(_ref3 => {\n    let [key, value] = _ref3;\n    // delete transformationOptions[key]; // Delete the variables, so we don't add them twice\n    return `${key}_${legacyNormalizeExpression(value)}`;\n  }).sort().concat( // @ts-ignore\n  (transformationOptions.variables || []).map(_ref4 => {\n    let [name, value] = _ref4;\n    return `${name}_${legacyNormalizeExpression(value)}`;\n  })).join(','); // Clean up!\n\n  const urlImageTransfomrations = Object.entries(urlParams).filter(_ref5 => {\n    let [key, value] = _ref5;\n\n    if (typeof value === 'undefined' || value === null) {\n      return false;\n    }\n\n    if (typeof value === 'string' && value.length === 0) {\n      return false;\n    }\n\n    if (Array.isArray(value) && value.length === 0) {\n      return false;\n    }\n\n    return true;\n  }).map(_ref6 => {\n    let [key, value] = _ref6;\n    return `${key}_${value}`;\n  }).sort().join(',');\n  const finalTransformationString = [ifValue, variables, urlImageTransfomrations, transformationOptions.raw_transformation].filter(a => a).join(\",\");\n\n  if (finalTransformationString) {\n    childTransformations.push(finalTransformationString);\n  } // console.log(childTransformations);\n\n\n  return childTransformations.join(\"/\");\n}","map":{"version":3,"sources":["C:/Users/sonhe/OneDrive/Desktop/New folder/nhom6-csdlnc/client/node_modules/@cloudinary/url-gen/backwards/generateTransformationString.js"],"names":["processLayer","process_if","toArray","processRadius","isObject","processCustomFunction","processCustomPreFunction","splitRange","legacyNormalizeExpression","normRangeValues","processVideoParams","Transformation","processDpr","generateTransformationString","transformationOptions","toString","Array","isArray","map","singleTransformation","filter","a","join","width","height","size","hasLayer","overlay","underlay","crop","angle","background","replace","color","flags","dpr","undefined","radius","ifValue","if","custom_function","custom_pre_function","fps","namedTransformations","childTransformations","transformation","effect","no_html_sizes","sizeWidth","sizeHeight","split","indexOf","parseFloat","isAnyChildAnObject","some","Object","entries","key","value","border","exec","urlParams","ar","aspect_ratio","b","bo","c","co","e","fl","fn","h","ki","keyframe_interval","l","o","opacity","q","quality","r","t","u","w","x","y","z","zoom","ac","audio_codec","af","audio_frequency","br","bit_rate","cs","color_space","d","default_image","dl","delay","dn","density","du","duration","eo","offset","f","fetch_format","g","gravity","pg","page","p","prefix","so","sp","streaming_profile","vc","video_codec","vs","video_sampling","variables","startsWith","sort","concat","name","urlImageTransfomrations","length","finalTransformationString","raw_transformation","push"],"mappings":"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","sourcesContent":["import { processLayer } from \"./transformationProcessing/processLayer.js\";\nimport { process_if } from \"./transformationProcessing/processIf.js\";\nimport { toArray } from \"./utils/toArray.js\";\nimport { processRadius } from \"./transformationProcessing/processRadius.js\";\nimport { isObject } from \"./utils/isObject.js\";\nimport { processCustomFunction } from \"./transformationProcessing/processCustomFunction.js\";\nimport { processCustomPreFunction } from \"./transformationProcessing/processCustomPreFunction.js\";\nimport { splitRange } from \"./utils/splitRange.js\";\nimport { legacyNormalizeExpression } from \"./utils/legacyNormalizeExpression.js\";\nimport { normRangeValues } from \"./utils/norm_range_values.js\";\nimport { processVideoParams } from \"./transformationProcessing/processVideoParams.js\";\nimport Transformation from \"./transformation.js\";\nimport { processDpr } from \"./transformationProcessing/processDpr.js\";\n/**\n * Things dropped\n * - responsive_width\n * - config().dpr\n * - SSL Detected\n * - Provisioning API\n * - Magical configuration auto-mapping (everything has to be explicit)\n * - Signatures\n * - Secure is default true\n * @param transformationOptions\n */\nexport function generateTransformationString(transformationOptions) {\n    if (typeof transformationOptions === 'string') {\n        return transformationOptions;\n    }\n    if (transformationOptions instanceof Transformation) {\n        return transformationOptions.toString();\n    }\n    if (Array.isArray(transformationOptions)) {\n        return transformationOptions\n            .map((singleTransformation) => {\n            return generateTransformationString(singleTransformation);\n        }).filter((a) => { return a; }).join('/');\n    }\n    // let responsive_width = consumeOption(transformationOptions, \"responsive_width\", config().responsive_width);\n    let width;\n    let height;\n    const size = transformationOptions.size;\n    const hasLayer = transformationOptions.overlay || transformationOptions.underlay;\n    const crop = transformationOptions.crop;\n    const angle = toArray(transformationOptions.angle).join(\".\");\n    const background = (transformationOptions.background || '').replace(/^#/, \"rgb:\");\n    const color = (transformationOptions.color || '').replace(/^#/, \"rgb:\");\n    const flags = (toArray(transformationOptions.flags || [])).join('.');\n    const dpr = transformationOptions.dpr === undefined ? transformationOptions.dpr : processDpr(transformationOptions.dpr);\n    const overlay = processLayer(transformationOptions.overlay);\n    const radius = processRadius(transformationOptions.radius);\n    const underlay = processLayer(transformationOptions.underlay);\n    const ifValue = process_if(transformationOptions.if);\n    const custom_function = processCustomFunction(transformationOptions.custom_function);\n    const custom_pre_function = processCustomPreFunction(transformationOptions.custom_pre_function);\n    // These will change down the line, heads up!\n    let fps = transformationOptions.fps;\n    let namedTransformations = [];\n    let childTransformations = toArray(transformationOptions.transformation || []);\n    let effect = transformationOptions.effect;\n    // TODO, Do we need this?\n    const no_html_sizes = hasLayer || angle || crop === \"fit\" || crop === \"limit\";\n    if (size) {\n        const [sizeWidth, sizeHeight] = size.split(\"x\");\n        width = sizeWidth;\n        height = sizeHeight;\n    }\n    else {\n        width = transformationOptions.width;\n        height = transformationOptions.height;\n    }\n    if (width && (width.toString().indexOf(\"auto\") === 0 || no_html_sizes || parseFloat(width.toString()) < 1)) {\n        delete transformationOptions.width;\n    }\n    if (height && (no_html_sizes || parseFloat(height.toString()) < 1)) {\n        delete transformationOptions.height;\n    }\n    // Is any child transformation an object?\n    const isAnyChildAnObject = childTransformations.some((transformation) => typeof transformation === 'object');\n    // If array of objects, or array of strings?\n    if (isAnyChildAnObject) {\n        childTransformations = childTransformations.map((transformation) => {\n            if (isObject(transformation)) {\n                return generateTransformationString(transformation);\n            }\n            else {\n                return generateTransformationString({ transformation });\n            }\n        }).filter((a) => a);\n    }\n    else {\n        namedTransformations = childTransformations.join(\".\");\n        childTransformations = []; // Reset child transfomrations\n    }\n    if (Array.isArray(effect)) {\n        effect = effect.join(\":\");\n    }\n    else if (isObject(effect)) {\n        effect = Object.entries(effect).map(([key, value]) => `${key}:${value}`);\n    }\n    let border = transformationOptions.border;\n    if (isObject(border)) {\n        border = `${border.width != null ? border.width : 2}px_solid_${(border.color != null ? border.color : \"black\").replace(/^#/, 'rgb:')}`;\n    }\n    else {\n        // @ts-ignore\n        if (/^\\d+$/.exec(border)) { // fallback to html border attributes\n            transformationOptions.border = border;\n            border = void 0;\n        }\n    }\n    if (Array.isArray(fps)) {\n        fps = fps.join('-');\n    }\n    // ocr(value) {\n    //   return this.param(value, \"ocr\", \"ocr\");\n    // }\n    const urlParams = {\n        a: legacyNormalizeExpression(angle),\n        ar: legacyNormalizeExpression(transformationOptions.aspect_ratio),\n        b: background,\n        bo: border,\n        c: crop,\n        co: color,\n        dpr: legacyNormalizeExpression(dpr),\n        e: legacyNormalizeExpression(effect),\n        fl: flags,\n        fn: custom_function || custom_pre_function,\n        fps: fps,\n        h: legacyNormalizeExpression(height),\n        ki: legacyNormalizeExpression(transformationOptions.keyframe_interval),\n        l: overlay,\n        o: legacyNormalizeExpression(transformationOptions.opacity),\n        q: legacyNormalizeExpression(transformationOptions.quality),\n        r: radius,\n        t: namedTransformations,\n        u: underlay,\n        w: legacyNormalizeExpression(width),\n        x: legacyNormalizeExpression(transformationOptions.x),\n        y: legacyNormalizeExpression(transformationOptions.y),\n        z: legacyNormalizeExpression(transformationOptions.zoom),\n        ac: transformationOptions.audio_codec,\n        af: transformationOptions.audio_frequency,\n        br: transformationOptions.bit_rate,\n        cs: transformationOptions.color_space,\n        d: transformationOptions.default_image,\n        dl: transformationOptions.delay,\n        dn: transformationOptions.density,\n        du: normRangeValues(transformationOptions.duration),\n        eo: normRangeValues(splitRange(transformationOptions.offset)[1]),\n        f: transformationOptions.fetch_format,\n        g: transformationOptions.gravity,\n        pg: transformationOptions.page,\n        p: transformationOptions.prefix,\n        so: normRangeValues(splitRange(transformationOptions.offset)[0]),\n        sp: transformationOptions.streaming_profile,\n        vc: processVideoParams(transformationOptions.video_codec),\n        vs: transformationOptions.video_sampling\n    };\n    // We can accept variables in here transformationOptions, or in here transformationOptions.variables\n    const variables = Object.entries(transformationOptions)\n        .filter(([key, value]) => key.startsWith('$'))\n        .map(([key, value]) => {\n        // delete transformationOptions[key]; // Delete the variables, so we don't add them twice\n        return `${key}_${legacyNormalizeExpression(value)}`;\n    }).sort().concat(\n    // @ts-ignore\n    (transformationOptions.variables || []).map(([name, value]) => `${name}_${legacyNormalizeExpression(value)}`)).join(',');\n    // Clean up!\n    const urlImageTransfomrations = Object.entries(urlParams)\n        .filter(([key, value]) => {\n        if (typeof value === 'undefined' || value === null) {\n            return false;\n        }\n        if (typeof value === 'string' && value.length === 0) {\n            return false;\n        }\n        if (Array.isArray(value) && value.length === 0) {\n            return false;\n        }\n        return true;\n    })\n        .map(([key, value]) => `${key}_${value}`)\n        .sort()\n        .join(',');\n    const finalTransformationString = [\n        ifValue,\n        variables,\n        urlImageTransfomrations,\n        transformationOptions.raw_transformation\n    ].filter((a) => a).join(\",\");\n    if (finalTransformationString) {\n        childTransformations.push(finalTransformationString);\n    }\n    // console.log(childTransformations);\n    return childTransformations.join(\"/\");\n}\n"]},"metadata":{},"sourceType":"module"}