{"ast":null,"code":"import { QualifierValue } from \"../internal/qualifier/QualifierValue.js\";\n/**\n * @summary qualifier\n * @namespace AutoFocus\n * @memberOf Qualifiers\n * @see Visit {@link Qualifiers.Gravity|Gravity} for an example\n */\n\n/**\n * @memberOf Qualifiers.AutoFocus\n * @extends {SDK.QualifierValue}\n * @see Visit {@link Qualifiers.Gravity|Gravity} for an example\n */\n\nclass AutoFocus extends QualifierValue {\n  constructor(focusOn, weight) {\n    super();\n    this._weight = weight;\n    this.focusOn = focusOn;\n    this.shouldAvoid = false;\n  }\n  /**\n   * @summary qualifier\n   * @description Specifies the object to focus on automatically\n   * Accepts an AutoFocusObject (which is just a wrapper for a FocusOn object, but with extra method: avoid, weight)\n   * @param {Qualifiers.FocusOn} obj The object to focus on.\n   * @param {number} weight\n   */\n\n\n  static focusOn(obj, weight) {\n    return new AutoFocus(obj, weight);\n  }\n\n  shouldAddWeight() {\n    return typeof this._weight === 'number' || typeof this._weight === 'string' || this.shouldAvoid;\n  }\n  /**\n   * @summary qualifier\n   * @desc Get the name of the of the object\n   */\n\n\n  getName() {\n    return this.focusOn.name;\n  }\n  /**\n   * @summary qualifier\n   * @desc Get the weight for the object\n   */\n\n\n  getWeight() {\n    if (this.shouldAvoid) {\n      return 'avoid';\n    } else {\n      return this._weight;\n    }\n  }\n  /**\n   * @summary qualifier\n   * @desc Return the string representation of this QualifierValue\n   */\n\n\n  toString() {\n    // Future proofing, in case we'd like to support some custom string in the future, or if data is coming from a DB\n    if (this.shouldAddWeight()) {\n      return `${this.getName()}_${this.getWeight()}`;\n    } else {\n      return `${this.getName()}`;\n    }\n  }\n  /**\n   * @summary qualifier\n   * @description Sets the importance level of the object within the automatic gravity algorithm\n   * @param {numebr} w The focus weight for the object\n   * @return {this}\n   */\n\n\n  weight(w) {\n    this._weight = w;\n    return this;\n  }\n  /**\n   * @summary qualifier\n   * @description Attempts to avoid the detected object in the image\n   * @return {this}\n   */\n\n\n  avoid() {\n    this.shouldAvoid = true;\n    return this;\n  }\n\n}\n\nexport { AutoFocus };","map":{"version":3,"sources":["C:/Users/sonhe/OneDrive/Desktop/New folder/nhom6-csdlnc/client/node_modules/@cloudinary/url-gen/qualifiers/autoFocus.js"],"names":["QualifierValue","AutoFocus","constructor","focusOn","weight","_weight","shouldAvoid","obj","shouldAddWeight","getName","name","getWeight","toString","w","avoid"],"mappings":"AAAA,SAASA,cAAT,QAA+B,yCAA/B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,SAAN,SAAwBD,cAAxB,CAAuC;AACnCE,EAAAA,WAAW,CAACC,OAAD,EAAUC,MAAV,EAAkB;AACzB;AACA,SAAKC,OAAL,GAAeD,MAAf;AACA,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKG,WAAL,GAAmB,KAAnB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACkB,SAAPH,OAAO,CAACI,GAAD,EAAMH,MAAN,EAAc;AACxB,WAAO,IAAIH,SAAJ,CAAcM,GAAd,EAAmBH,MAAnB,CAAP;AACH;;AACDI,EAAAA,eAAe,GAAG;AACd,WAAO,OAAO,KAAKH,OAAZ,KAAwB,QAAxB,IAAoC,OAAO,KAAKA,OAAZ,KAAwB,QAA5D,IAAwE,KAAKC,WAApF;AACH;AACD;AACJ;AACA;AACA;;;AACIG,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKN,OAAL,CAAaO,IAApB;AACH;AACD;AACJ;AACA;AACA;;;AACIC,EAAAA,SAAS,GAAG;AACR,QAAI,KAAKL,WAAT,EAAsB;AAClB,aAAO,OAAP;AACH,KAFD,MAGK;AACD,aAAO,KAAKD,OAAZ;AACH;AACJ;AACD;AACJ;AACA;AACA;;;AACIO,EAAAA,QAAQ,GAAG;AACP;AACA,QAAI,KAAKJ,eAAL,EAAJ,EAA4B;AACxB,aAAQ,GAAE,KAAKC,OAAL,EAAe,IAAG,KAAKE,SAAL,EAAiB,EAA7C;AACH,KAFD,MAGK;AACD,aAAQ,GAAE,KAAKF,OAAL,EAAe,EAAzB;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIL,EAAAA,MAAM,CAACS,CAAD,EAAI;AACN,SAAKR,OAAL,GAAeQ,CAAf;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIC,EAAAA,KAAK,GAAG;AACJ,SAAKR,WAAL,GAAmB,IAAnB;AACA,WAAO,IAAP;AACH;;AAtEkC;;AAwEvC,SAASL,SAAT","sourcesContent":["import { QualifierValue } from \"../internal/qualifier/QualifierValue.js\";\n/**\n * @summary qualifier\n * @namespace AutoFocus\n * @memberOf Qualifiers\n * @see Visit {@link Qualifiers.Gravity|Gravity} for an example\n */\n/**\n * @memberOf Qualifiers.AutoFocus\n * @extends {SDK.QualifierValue}\n * @see Visit {@link Qualifiers.Gravity|Gravity} for an example\n */\nclass AutoFocus extends QualifierValue {\n    constructor(focusOn, weight) {\n        super();\n        this._weight = weight;\n        this.focusOn = focusOn;\n        this.shouldAvoid = false;\n    }\n    /**\n     * @summary qualifier\n     * @description Specifies the object to focus on automatically\n     * Accepts an AutoFocusObject (which is just a wrapper for a FocusOn object, but with extra method: avoid, weight)\n     * @param {Qualifiers.FocusOn} obj The object to focus on.\n     * @param {number} weight\n     */\n    static focusOn(obj, weight) {\n        return new AutoFocus(obj, weight);\n    }\n    shouldAddWeight() {\n        return typeof this._weight === 'number' || typeof this._weight === 'string' || this.shouldAvoid;\n    }\n    /**\n     * @summary qualifier\n     * @desc Get the name of the of the object\n     */\n    getName() {\n        return this.focusOn.name;\n    }\n    /**\n     * @summary qualifier\n     * @desc Get the weight for the object\n     */\n    getWeight() {\n        if (this.shouldAvoid) {\n            return 'avoid';\n        }\n        else {\n            return this._weight;\n        }\n    }\n    /**\n     * @summary qualifier\n     * @desc Return the string representation of this QualifierValue\n     */\n    toString() {\n        // Future proofing, in case we'd like to support some custom string in the future, or if data is coming from a DB\n        if (this.shouldAddWeight()) {\n            return `${this.getName()}_${this.getWeight()}`;\n        }\n        else {\n            return `${this.getName()}`;\n        }\n    }\n    /**\n     * @summary qualifier\n     * @description Sets the importance level of the object within the automatic gravity algorithm\n     * @param {numebr} w The focus weight for the object\n     * @return {this}\n     */\n    weight(w) {\n        this._weight = w;\n        return this;\n    }\n    /**\n     * @summary qualifier\n     * @description Attempts to avoid the detected object in the image\n     * @return {this}\n     */\n    avoid() {\n        this.shouldAvoid = true;\n        return this;\n    }\n}\nexport { AutoFocus };\n"]},"metadata":{},"sourceType":"module"}