{"ast":null,"code":"import { BaseCommonBackground } from \"../base/BaseCommonBackground.js\";\n/**\n * @description Automatically determines the color to use for padding, if needed when resizing an asset. Selects the\n * predominant color from the whole image.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BaseCommonBackground}\n */\n\nclass BackgroundAutoPredominantQualifier extends BaseCommonBackground {\n  /**\n   * @description\n   * Stringify the qualifier\n   * BackgroundQualifiers don't have a value, but instead override the toString() function.\n   */\n  toString() {\n    return `\n    b_auto:predominant\n    ${this._contrast ? '_contrast' : ''}\n    ${this._palette.length ? `:palette_${this._palette.join('_')}` : ''}\n    `.replace(/\\s+/g, '');\n  }\n\n}\n\nexport { BackgroundAutoPredominantQualifier };","map":{"version":3,"sources":["C:/Users/sonhe/OneDrive/Desktop/New folder/nhom6-csdlnc/client/node_modules/@cloudinary/url-gen/qualifiers/background/shared/auto/BackgroundAutoPredominantQualifier.js"],"names":["BaseCommonBackground","BackgroundAutoPredominantQualifier","toString","_contrast","_palette","length","join","replace"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,iCAArC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,kCAAN,SAAiDD,oBAAjD,CAAsE;AAClE;AACJ;AACA;AACA;AACA;AACIE,EAAAA,QAAQ,GAAG;AACP,WAAQ;AAChB;AACA,MAAM,KAAKC,SAAL,GAAiB,WAAjB,GAA+B,EAAG;AACxC,MAAM,KAAKC,QAAL,CAAcC,MAAd,GAAwB,YAAW,KAAKD,QAAL,CAAcE,IAAd,CAAmB,GAAnB,CAAwB,EAA3D,GAA+D,EAAG;AACxE,KAJe,CAITC,OAJS,CAID,MAJC,EAIO,EAJP,CAAP;AAKH;;AAZiE;;AActE,SAASN,kCAAT","sourcesContent":["import { BaseCommonBackground } from \"../base/BaseCommonBackground.js\";\n/**\n * @description Automatically determines the color to use for padding, if needed when resizing an asset. Selects the\n * predominant color from the whole image.\n * @memberOf Qualifiers.Background\n * @extends {Qualifiers.Background.BaseCommonBackground}\n */\nclass BackgroundAutoPredominantQualifier extends BaseCommonBackground {\n    /**\n     * @description\n     * Stringify the qualifier\n     * BackgroundQualifiers don't have a value, but instead override the toString() function.\n     */\n    toString() {\n        return `\n    b_auto:predominant\n    ${this._contrast ? '_contrast' : ''}\n    ${this._palette.length ? `:palette_${this._palette.join('_')}` : ''}\n    `.replace(/\\s+/g, '');\n    }\n}\nexport { BackgroundAutoPredominantQualifier };\n"]},"metadata":{},"sourceType":"module"}