{"ast":null,"code":"/**\n * @description Contains functions to select the type of color-blind condition to simulate.\n * <b>Learn more</b>: {@link https://cloudinary.com/blog/open_your_eyes_to_color_accessibility|Blog: Open your Eyes to Color Accessibility}\n * @memberOf Qualifiers\n * @namespace SimulateColorBlindValues\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\nfunction deuteranopia() {\n  return 'deuteranopia';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\n\n\nfunction protanopia() {\n  return 'protanopia';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\n\n\nfunction tritanopia() {\n  return 'tritanopia';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\n\n\nfunction tritanomaly() {\n  return 'tritanomaly';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\n\n\nfunction deuteranomaly() {\n  return 'deuteranomaly';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\n\n\nfunction coneMonochromacy() {\n  return 'cone_monochromacy';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\n\n\nfunction rodMonochromacy() {\n  return 'rod_monochromacy';\n}\n\nconst SimulateColorBlind = {\n  coneMonochromacy,\n  deuteranomaly,\n  deuteranopia,\n  protanopia,\n  rodMonochromacy,\n  tritanomaly,\n  tritanopia\n};\nexport { SimulateColorBlind, coneMonochromacy, deuteranomaly, deuteranopia, protanopia, rodMonochromacy, tritanomaly, tritanopia };","map":{"version":3,"sources":["C:/Users/sonhe/OneDrive/Desktop/New folder/nhom6-csdlnc/client/node_modules/@cloudinary/url-gen/qualifiers/simulateColorBlind.js"],"names":["deuteranopia","protanopia","tritanopia","tritanomaly","deuteranomaly","coneMonochromacy","rodMonochromacy","SimulateColorBlind"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,GAAwB;AACpB,SAAO,cAAP;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASC,UAAT,GAAsB;AAClB,SAAO,YAAP;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASC,UAAT,GAAsB;AAClB,SAAO,YAAP;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASC,WAAT,GAAuB;AACnB,SAAO,aAAP;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASC,aAAT,GAAyB;AACrB,SAAO,eAAP;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASC,gBAAT,GAA4B;AACxB,SAAO,mBAAP;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASC,eAAT,GAA2B;AACvB,SAAO,kBAAP;AACH;;AACD,MAAMC,kBAAkB,GAAG;AACvBF,EAAAA,gBADuB;AAEvBD,EAAAA,aAFuB;AAGvBJ,EAAAA,YAHuB;AAIvBC,EAAAA,UAJuB;AAKvBK,EAAAA,eALuB;AAMvBH,EAAAA,WANuB;AAOvBD,EAAAA;AAPuB,CAA3B;AASA,SAASK,kBAAT,EAA6BF,gBAA7B,EAA+CD,aAA/C,EAA8DJ,YAA9D,EAA4EC,UAA5E,EAAwFK,eAAxF,EAAyGH,WAAzG,EAAsHD,UAAtH","sourcesContent":["/**\n * @description Contains functions to select the type of color-blind condition to simulate.\n * <b>Learn more</b>: {@link https://cloudinary.com/blog/open_your_eyes_to_color_accessibility|Blog: Open your Eyes to Color Accessibility}\n * @memberOf Qualifiers\n * @namespace SimulateColorBlindValues\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\nfunction deuteranopia() {\n    return 'deuteranopia';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\nfunction protanopia() {\n    return 'protanopia';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\nfunction tritanopia() {\n    return 'tritanopia';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\nfunction tritanomaly() {\n    return 'tritanomaly';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\nfunction deuteranomaly() {\n    return 'deuteranomaly';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\nfunction coneMonochromacy() {\n    return 'cone_monochromacy';\n}\n/**\n * @summary qualifier\n * @memberOf Qualifiers.SimulateColorBlindValues\n * @return {string}\n */\nfunction rodMonochromacy() {\n    return 'rod_monochromacy';\n}\nconst SimulateColorBlind = {\n    coneMonochromacy,\n    deuteranomaly,\n    deuteranopia,\n    protanopia,\n    rodMonochromacy,\n    tritanomaly,\n    tritanopia\n};\nexport { SimulateColorBlind, coneMonochromacy, deuteranomaly, deuteranopia, protanopia, rodMonochromacy, tritanomaly, tritanopia };\n"]},"metadata":{},"sourceType":"module"}