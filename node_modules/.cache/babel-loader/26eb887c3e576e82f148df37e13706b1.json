{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { prepareColor } from \"../../internal/utils/prepareColor.js\";\n/**\n * @description Adds an outline to a transparent image. For examples, see the Image Transformations guide.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\n\nclass EffectOutline extends Action {\n  constructor() {\n    super();\n    this._actionModel = {};\n    this._actionModel.actionType = 'outline';\n  }\n  /**\n   * @description\n   * How to apply the outline effect which can be one of the following values:\n   * inner, inner_fill, outer, fill.\n   * @param {OutlineModeType|string} mode  The type of outline effect. Use the constants defined in Outline.\n   * @return {this}\n   */\n\n\n  mode(mode) {\n    this._actionModel.mode = mode;\n    this._mode = mode;\n    return this;\n  }\n  /**\n   * The thickness of the outline in pixels. (Range: 1 to 100, Server default: 5)\n   * @param {number} width\n   * @return {this}\n   */\n\n\n  width(width) {\n    this._actionModel.width = width;\n    this._width = width;\n    return this;\n  }\n  /**\n   * @description\n   * The level of blur of the outline.\n   * Range: 0 to 2000, Server default: 0\n   * @param {number | string} lvl\n   * @return {this}\n   */\n\n\n  blurLevel(lvl) {\n    this._actionModel.blurLevel = lvl;\n    this._blurLevel = lvl;\n    return this;\n  }\n  /**\n   * @param {string | Qualifiers.Color} color One of the SDK Color values, string, or rgba: '#fff'\n   * @return {this}\n   */\n\n\n  color(color) {\n    this._actionModel.color = color;\n    return this.addQualifier(new Qualifier('co', prepareColor(color)));\n  }\n\n  prepareQualifiers() {\n    this.addQualifier(new Qualifier('e', new QualifierValue(['outline', this._mode, this._width, this._blurLevel]).setDelimiter(':')));\n  }\n\n  static fromJson(actionModel) {\n    const {\n      actionType,\n      mode,\n      color,\n      blurLevel,\n      width\n    } = actionModel; // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n    // This allows the inheriting classes to determine the class to be created\n\n    const result = new this();\n    mode && result.mode(mode);\n    color && result.color(color);\n    blurLevel && result.blurLevel(blurLevel);\n    width && result.width(width);\n    return result;\n  }\n\n}\n\nexport { EffectOutline };","map":{"version":3,"sources":["C:/Users/sonhe/OneDrive/Desktop/New folder/nhom6-csdlnc/client/node_modules/@cloudinary/url-gen/actions/effect/Outline.js"],"names":["Action","QualifierValue","Qualifier","prepareColor","EffectOutline","constructor","_actionModel","actionType","mode","_mode","width","_width","blurLevel","lvl","_blurLevel","color","addQualifier","prepareQualifiers","setDelimiter","fromJson","actionModel","result"],"mappings":"AAAA,SAASA,MAAT,QAAuB,0BAAvB;AACA,SAASC,cAAT,QAA+B,4CAA/B;AACA,SAASC,SAAT,QAA0B,uCAA1B;AACA,SAASC,YAAT,QAA6B,sCAA7B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,aAAN,SAA4BJ,MAA5B,CAAmC;AAC/BK,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,YAAL,GAAoB,EAApB;AACA,SAAKA,YAAL,CAAkBC,UAAlB,GAA+B,SAA/B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIC,EAAAA,IAAI,CAACA,IAAD,EAAO;AACP,SAAKF,YAAL,CAAkBE,IAAlB,GAAyBA,IAAzB;AACA,SAAKC,KAAL,GAAaD,IAAb;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIE,EAAAA,KAAK,CAACA,KAAD,EAAQ;AACT,SAAKJ,YAAL,CAAkBI,KAAlB,GAA0BA,KAA1B;AACA,SAAKC,MAAL,GAAcD,KAAd;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIE,EAAAA,SAAS,CAACC,GAAD,EAAM;AACX,SAAKP,YAAL,CAAkBM,SAAlB,GAA8BC,GAA9B;AACA,SAAKC,UAAL,GAAkBD,GAAlB;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIE,EAAAA,KAAK,CAACA,KAAD,EAAQ;AACT,SAAKT,YAAL,CAAkBS,KAAlB,GAA0BA,KAA1B;AACA,WAAO,KAAKC,YAAL,CAAkB,IAAId,SAAJ,CAAc,IAAd,EAAoBC,YAAY,CAACY,KAAD,CAAhC,CAAlB,CAAP;AACH;;AACDE,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,YAAL,CAAkB,IAAId,SAAJ,CAAc,GAAd,EAAmB,IAAID,cAAJ,CAAmB,CAAC,SAAD,EAAY,KAAKQ,KAAjB,EAAwB,KAAKE,MAA7B,EAAqC,KAAKG,UAA1C,CAAnB,EAA0EI,YAA1E,CAAuF,GAAvF,CAAnB,CAAlB;AACH;;AACc,SAARC,QAAQ,CAACC,WAAD,EAAc;AACzB,UAAM;AAAEb,MAAAA,UAAF;AAAcC,MAAAA,IAAd;AAAoBO,MAAAA,KAApB;AAA2BH,MAAAA,SAA3B;AAAsCF,MAAAA;AAAtC,QAAgDU,WAAtD,CADyB,CAEzB;AACA;;AACA,UAAMC,MAAM,GAAG,IAAI,IAAJ,EAAf;AACAb,IAAAA,IAAI,IAAIa,MAAM,CAACb,IAAP,CAAYA,IAAZ,CAAR;AACAO,IAAAA,KAAK,IAAIM,MAAM,CAACN,KAAP,CAAaA,KAAb,CAAT;AACAH,IAAAA,SAAS,IAAIS,MAAM,CAACT,SAAP,CAAiBA,SAAjB,CAAb;AACAF,IAAAA,KAAK,IAAIW,MAAM,CAACX,KAAP,CAAaA,KAAb,CAAT;AACA,WAAOW,MAAP;AACH;;AA7D8B;;AA+DnC,SAASjB,aAAT","sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { prepareColor } from \"../../internal/utils/prepareColor.js\";\n/**\n * @description Adds an outline to a transparent image. For examples, see the Image Transformations guide.\n * @extends SDK.Action\n * @memberOf Actions.Effect\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass EffectOutline extends Action {\n    constructor() {\n        super();\n        this._actionModel = {};\n        this._actionModel.actionType = 'outline';\n    }\n    /**\n     * @description\n     * How to apply the outline effect which can be one of the following values:\n     * inner, inner_fill, outer, fill.\n     * @param {OutlineModeType|string} mode  The type of outline effect. Use the constants defined in Outline.\n     * @return {this}\n     */\n    mode(mode) {\n        this._actionModel.mode = mode;\n        this._mode = mode;\n        return this;\n    }\n    /**\n     * The thickness of the outline in pixels. (Range: 1 to 100, Server default: 5)\n     * @param {number} width\n     * @return {this}\n     */\n    width(width) {\n        this._actionModel.width = width;\n        this._width = width;\n        return this;\n    }\n    /**\n     * @description\n     * The level of blur of the outline.\n     * Range: 0 to 2000, Server default: 0\n     * @param {number | string} lvl\n     * @return {this}\n     */\n    blurLevel(lvl) {\n        this._actionModel.blurLevel = lvl;\n        this._blurLevel = lvl;\n        return this;\n    }\n    /**\n     * @param {string | Qualifiers.Color} color One of the SDK Color values, string, or rgba: '#fff'\n     * @return {this}\n     */\n    color(color) {\n        this._actionModel.color = color;\n        return this.addQualifier(new Qualifier('co', prepareColor(color)));\n    }\n    prepareQualifiers() {\n        this.addQualifier(new Qualifier('e', new QualifierValue(['outline', this._mode, this._width, this._blurLevel]).setDelimiter(':')));\n    }\n    static fromJson(actionModel) {\n        const { actionType, mode, color, blurLevel, width } = actionModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this();\n        mode && result.mode(mode);\n        color && result.color(color);\n        blurLevel && result.blurLevel(blurLevel);\n        width && result.width(width);\n        return result;\n    }\n}\nexport { EffectOutline };\n"]},"metadata":{},"sourceType":"module"}